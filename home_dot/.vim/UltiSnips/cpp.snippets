extends c

priority -49

snippet cinclude
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <cmath>
#include <cassert>
endsnippet

snippet dump
#define dump(x)  cerr << #x << " = " << (x) << "\n";
endsnippet

snippet debug
#define debug(x) cerr << #x << " = " << (x) << " (L" << __LINE__ << ")" << " " << __FILE__ << "\n";
endsnippet

snippet cin
ios::sync_with_stdio(false);
cin.tie(0);
endsnippet

snippet ends_with
bool ends_with(const string &str, const string &suffix) {
	if (str.size() < suffix.size()) {
		return false;
	}
	return equal(suffix.rbegin(), suffix.rend(), str.rbegin());
}
endsnippet


snippet split
vector<string> split_on_char(char sep, const string &str) {
	vector<string> v;
	string::const_iterator i = str.begin();
	while (i != str.end()) {
		string::const_iterator j = i;
		while (j != str.end() && *j != sep) {
			++j;
		}
		v.push_back(string(i, j));
		if (j != str.end()) {
			++j;
		}
		i = j;
	}
	return v;
}
endsnippet

# vim:ft=snippets:
