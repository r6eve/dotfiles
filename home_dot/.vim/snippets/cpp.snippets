include c.snippets

snippet license
abbr license
	//
	//           Copyright r6eve 2019 -
	//  Distributed under the Boost Software License, Version 1.0.
	//     (See accompanying file LICENSE_1_0.txt or copy at
	//           https://www.boost.org/LICENSE_1_0.txt)
	//

snippet cinclude
abbr cstdio, cstdlib, ..
	#include <cstdio>
	#include <cstdlib>
	#include <cstring>
	#include <cctype>
	#include <cmath>
	#include <cassert>

snippet dump
abbr dump
	#define dump(x)  cerr << #x << " = " << (x) << "\n";

snippet debug
abbr debug
	#define debug(x) cerr << #x << " = " << (x) << " (L" << __LINE__ << ")" << " " << __FILE__ << "\n";

snippet cin
abbr cin
	ios::sync_with_stdio(false);
	cin.tie(0);

snippet ends_with
abbr endswith
	bool ends_with(const string &str, const string &suffix) {
		if (str.size() < suffix.size()) {
			return false;
		}
		return equal(suffix.rbegin(), suffix.rend(), str.rbegin());
	}

snippet split
abbr split
	vector<string> split_on_char(char sep, const string &str) {
		vector<string> v;
		string::const_iterator i = str.begin();
		while (i != str.end()) {
			string::const_iterator j = i;
			while (j != str.end() && *j != sep) {
				++j;
			}
			v.push_back(string(i, j));
			if (j != str.end()) {
				++j;
			}
			i = j;
		}
		return v;
	}
