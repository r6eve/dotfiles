ev(){ evince "$@" >/dev/null 2>&1 &! }
eog(){ /usr/bin/eog "$@" >/dev/null 2>&1 &! }
gmp(){ gimp "$@" >/dev/null 2>&1 &! }
md(){ $HOME/.wine/drive_c/Program\ Files/Medibang/MediBang\ Paint\ Pro/MediBangPaintPro.exe "$@" >/dev/null 2>&1 &! }
libre(){ libreoffice "$@" >/dev/null 2>&1 &! }
dic(){ git diff --color-words --no-index "$1" "$2" }
man(){
  LANG=en_US.UTF-8
  env LESS_TERMCAP_mb=$'\E[01;31m' \
  LESS_TERMCAP_md=$'\E[01;38;5;74m' \
  LESS_TERMCAP_me=$'\E[0m' \
  LESS_TERMCAP_se=$'\E[0m' \
  LESS_TERMCAP_so=$'\E[7m' \
  LESS_TERMCAP_ue=$'\E[0m' \
  LESS_TERMCAP_us=$'\E[04;38;5;146m' \
  man "$@"
}
m(){
  LANG=en_US.UTF-8
  env LESS_TERMCAP_mb=$'\E[01;31m' \
  LESS_TERMCAP_md=$'\E[01;38;5;74m' \
  LESS_TERMCAP_me=$'\E[0m' \
  LESS_TERMCAP_se=$'\E[0m' \
  LESS_TERMCAP_so=$'\E[7m' \
  LESS_TERMCAP_ue=$'\E[0m' \
  LESS_TERMCAP_us=$'\E[04;38;5;146m' \
  man "$@"
  if [ $? -eq 16 ]; then
    "$@" --help
  else
    true
  fi
}
pmver(){ perl -M$1 -E "say \$$1::VERSION" }
u(){ cd ./$(git rev-parse --show-cdup) }
rg(){
  p='.multirust/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src';
  find $HOME/$p -name '*.rs' |xargs ag --color -- $@ |perl -pse 's@$HOME/$p/@@' -- -HOME=$HOME -p=$p
}
# scut(){
#   ls *_*.png |perl -pe 'print; s/^(\d+)_(\d+).+$/$1$2.png/' |parallel -N2 'convert -crop 1400x810+0+45 {1} {2}'
# }
# sscut(){
#   ls *_*.png |perl -pe 'print; s/^(\d+)_(\d+).+$/$1$2.png/' |parallel -N2 'convert -crop 1440x810+0+45 {1} {2}'
# }
cpy(){ cat $1 |perl -pe 's/\n// if eof' |xsel --input --clipboard }
ytc(){
  n=`echo "$1" |perl -ne 's/^[^\d]+(\d+)$/printf("%03d\n", $1)/e'`;
  yukitocaddy "$1" -o no$n.test
}

# tmux-tanlog
tanlog_begin() { export TANLOG_LOGFILE=$(tmux-tanlog start $1) }
tanlog_end() { tmux-tanlog end $TANLOG_LOGFILE }
typeset -Uga preexec_functions
typeset -Uga precmd_functions
preexec_functions+=tanlog_begin
precmd_functions+=tanlog_end
