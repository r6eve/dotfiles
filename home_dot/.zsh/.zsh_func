# Make process and disown
dockerun(){ docker run --rm -ti -u $(id -u):$(id -g) -v /etc/group:/etc/group:ro -v /etc/passwd:/etc/passwd:ro -v /etc/shadow:/etc/shadow:ro -v /etc/sudoers.d:/etc/sudoers.d:ro "$@" }
eog(){ /usr/bin/eog "$@" >/dev/null 2>&1 &! }
ev(){ evince "$@" >/dev/null 2>&1 &! }
gmp(){ gimp "$@" >/dev/null 2>&1 &! }
libre(){ libreoffice "$@" >/dev/null 2>&1 &! }
md(){ $HOME/.wine/drive_c/Program\ Files/Medibang/MediBang\ Paint\ Pro/MediBangPaintPro.exe "$@" >/dev/null 2>&1 &! }
mpdf(){ masterpdfeditor5 "$@" >/dev/null 2>&1 &! }

dic(){ git diff --color-words --no-index "$1" "$2" }
pmver(){ perl -M$1 -E "say \$$1::VERSION" }
u(){ cd ./$(git rev-parse --show-cdup) }
rg(){
  p='.multirust/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src';
  find $HOME/$p -name '*.rs' |xargs ag --color -- $@ |perl -pse 's@$HOME/$p/@@' -- -HOME=$HOME -p=$p
}
# scut(){
#   ls *_*.png |perl -pe 'print; s/^(\d+)_(\d+).+$/$1$2.png/' |parallel -N2 'convert -crop 1400x810+0+45 {1} {2}'
# }
# sscut(){
#   ls *_*.png |perl -pe 'print; s/^(\d+)_(\d+).+$/$1$2.png/' |parallel -N2 'convert -crop 1440x810+0+45 {1} {2}'
# }
cpy(){ cat $1 |perl -pe 's/\n// if eof' |xsel --input --clipboard }
ytc(){
  n=`echo "$1" |perl -ne 's/^[^\d]+(\d+)$/printf("%03d\n", $1)/e'`;
  yukitocaddy "$1" -o no$n.test
}

# https://github.com/rhysd/dogfiles/blob/4e9d5a575e6cb3ecb2580089be86205aba6e0d81/zshrc#L112
update-zfunc() {
  local zfunc="$HOME/.zfunc"
  # Old : https://raw.githubusercontent.com/technomancy/leiningen/master/zsh_completion.zsh
  urls=(
    https://raw.githubusercontent.com/docker/compose/master/contrib/completion/zsh/_docker-compose
    https://raw.githubusercontent.com/esc/conda-zsh-completion/master/_conda
  )

  for url in $urls; do
    local file="$zfunc/${url:t}"
    echo "Downloading complation definition '${file}'"
    if curl -f -L "$url" > "$file"; then
      chmod +x "$file"
    else
      echo "Failed to download ${url}"
      rm -rf $file
    fi
    echo
  done

  if which rustup > /dev/null; then
    echo "Setting up completion definitions for rust toolchain"
    rustup completions zsh > "$zfunc/_rustup" && chmod +x "$zfunc/_rustup"

    local toolchain="$(rustup toolchain list | grep ' (default)')"
    toolchain="${toolchain%% \(default\)}"
    if [[ "$toolchain" != "" ]]; then
      rm -f "$zfunc/_cargo"
      cp "$HOME/.rustup/toolchains/$toolchain/share/zsh/site-functions/_cargo" "$zfunc/_cargo"
    fi
  fi
}

# tmux-tanlog
tanlog_begin() { export TANLOG_LOGFILE=$(tmux-tanlog start $1) }
tanlog_end() { tmux-tanlog end $TANLOG_LOGFILE }
typeset -Uga preexec_functions
typeset -Uga precmd_functions
preexec_functions+=tanlog_begin
precmd_functions+=tanlog_end
